{"version":3,"file":"static/js/193.0675b49a.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/service.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","views/pages/Service.js","services/addon.js","views/pages/Addon.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/customer_care.js","views/pages/CustomerCare.js","services/faq.js","views/pages/FAQ.js","services/apartment.js","views/pages/Apartment.js","services/floor.js","views/pages/Floor.js","services/membership.js","views/pages/Membership.js","services/user.js","services/address.js","views/pages/management/Address.js","views/pages/management/User.js","services/worker.js","views/pages/management/Worker.js","services/subscription.js","views/pages/Subscription.js","services/review.js","views/pages/Reviews.js","services/voucher.js","views/pages/Voucher.js","services/booking.js","views/pages/Booking.js","services/banner.js","views/pages/Banner.js","services/quiz.js","views/pages/quiz/QuizVideo.js","views/pages/quiz/QuizOption.js","views/pages/quiz/QuizAnswer.js","views/pages/quiz/QuizQuestion.js","services/notification.js","views/pages/notification.js","views/layout/route.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["import React from 'react'\r\nimport { Form, Row, Col, Typography, Card, Progress } from 'antd';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Row gutter={[8, 24]} justify=\"space-between\">\r\n                <Col span={24}>\r\n                    <Typography.Title level={4} style={{ marginLeft: '25px' }}>Overview</Typography.Title>\r\n                </Col>\r\n                <Col span1={6}>\r\n                    <Card\r\n                        hoverable\r\n                        style={{\r\n                            width: 300,\r\n                            backgroundColor: '#ce90e3',\r\n                            borderRadius: '26px'\r\n                        }}\r\n                    >\r\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>Total Order</Typography.Title>\r\n                        <Typography.Title level={2} style={{}}>47</Typography.Title>\r\n                    </Card>\r\n                </Col>\r\n                <Col span1={6}>\r\n                    <Card\r\n                        hoverable\r\n                        style={{\r\n                            width: 300,\r\n                            backgroundColor: '#a8fdeb',\r\n                            borderRadius: '26px'\r\n                        }}\r\n                    >\r\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>Total Order Value</Typography.Title>\r\n                        <Typography.Title level={2} style={{}}>₹ 748569.68</Typography.Title>\r\n                    </Card>\r\n                </Col>\r\n                <Col span1={6}>\r\n                    <Card\r\n                        hoverable\r\n                        style={{\r\n                            width: 300,\r\n                            backgroundColor: '#fffc80',\r\n                            borderRadius: '26px'\r\n                        }}\r\n                    >\r\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>Total Product Sale</Typography.Title>\r\n                        <Typography.Title level={2} style={{}}>1619</Typography.Title>\r\n                    </Card>\r\n                </Col>\r\n                <Col span1={6}>\r\n                    <Card\r\n                        hoverable\r\n                        style={{\r\n                            width: 300,\r\n                            backgroundColor: '#9ef4ff',\r\n                            borderRadius: '26px'\r\n                        }}\r\n                    >\r\n                        <Typography.Title level={4} style={{ marginTop: \"-13px\" }}>New User</Typography.Title>\r\n                        <Typography.Title level={2} style={{}}>89</Typography.Title>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Card\r\n                        title=\"Revenue\"\r\n                        hoverable\r\n                        style={{\r\n                            width: 655,\r\n                            height: '500px'\r\n                        }}\r\n                    >\r\n                        <p>Card content</p>\r\n                        <p>Card content</p>\r\n                        <p>Card content</p>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Card\r\n                        title=\"Weekly Wise Sale\"\r\n                        hoverable\r\n                        style={{\r\n                            width: 655,\r\n                            height: '500px'\r\n                        }}\r\n                    >\r\n                        <Form.Item label=\"Methane\" >\r\n                            <Progress percent={30} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Butane\">\r\n                            <Progress percent={50} status=\"active\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Propanol\">\r\n                            <Progress percent={70} status=\"exception\" />\r\n                        </Form.Item>\r\n                        <Form.Item label='Alcohol'>\r\n                            <Progress percent={100} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Methane\" >\r\n                            <Progress percent={26} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Butane\">\r\n                            <Progress percent={6} status=\"active\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Propanol\">\r\n                            <Progress percent={16} status=\"exception\" />\r\n                        </Form.Item>\r\n                        <Form.Item label='Alcohol'>\r\n                            <Progress percent={19} />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Propanol\">\r\n                            <Progress percent={16} status=\"exception\" />\r\n                        </Form.Item>\r\n                        <Form.Item label='Alcohol'>\r\n                            <Progress percent={19} />\r\n                        </Form.Item>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'service';\r\n\r\n    static detailService(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listService(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveService(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteService(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\"+  url);\r\n    }\r\n\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React, { useState } from \"react\";\r\nimport util from \"./util\";\r\n\r\nexport default function UploadImage({\r\n    value = [],\r\n    uploadButton = <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>,\r\n    count = 1,\r\n    cropImage = null,\r\n    disabled = false,\r\n    classs,\r\n    onChange,\r\n    ...others\r\n}) {\r\n    const [fileList, setFileList] = useState([...util.getFileFormat(value)]);\r\n    const customRequest = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name, percent: 33, }]);\r\n                if (onChange && typeof onChange == 'function') {\r\n                    onChange([...fileList?.map(v => v.url), res.data.url]);\r\n                }\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = (file) => {};\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ url: file.url }).then(res => {\r\n            setFileList(fileList?.filter(v => v.uid !== file.uid));\r\n            onChange(fileList?.filter(v => v.uid !== file.uid)?.map(v=> v.url));\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={customRequest}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    {...{ ...others }}\r\n                >\r\n                    {\r\n                        fileList?.length >= count\r\n                            ? null\r\n                            : uploadButton\r\n                    }\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={customRequest}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            fileList={fileList}\r\n            className={classs}\r\n            {...{ ...others }}\r\n        >\r\n            {\r\n                fileList?.length >= count\r\n                    ? null\r\n                    : uploadButton\r\n            }\r\n        </Upload>\r\n    }\r\n\r\n};","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/service';\r\n\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Service() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Logo',\r\n            dataIndex: 'logo',\r\n            width: 50,\r\n            render: (v) => {\r\n                return <Image src={v} height={30} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Per Sq Feet Rate',\r\n            dataIndex: 'perSqFeetRate',\r\n            width: 150,\r\n            render: (v) => <b> ₹ {v} </b>\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n        },\r\n        {\r\n            title: 'Instruction',\r\n            dataIndex: 'instructions',\r\n        },\r\n        {\r\n            title: 'Photo',\r\n            dataIndex: 'photo',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listService(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteService(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Services</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by Name\" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveService(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Services'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Logo\">\r\n                                <UploadImage\r\n                                        value={data.logo ? [data.logo] : []}\r\n                                        onChange={v => setData({ ...data, logo: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage\r\n                                        value={data.photo ? [data.photo] : []}\r\n                                        onChange={v => setData({ ...data, photo: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Per Sq Feet Rate\" required>\r\n                                    <Input placeholder=\"Per Sq Feet Rate\" type='number' value={data.perSqFeetRate} onChange={e => { handleChange({ perSqFeetRate: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Instructions\" required>\r\n                                    <Input placeholder=\"Instructions\" value={data.instructions} onChange={e => { handleChange({ instructions: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'add-on';\r\n\r\n    static detailAddon(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listAddon(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveAddon(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteAddon(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/addon';\r\n\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Addon() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            width: 150,\r\n            render: (v) => <b> ₹ {v} </b>\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n        },\r\n        {\r\n            title: 'Instruction',\r\n            dataIndex: 'instructions',\r\n        },\r\n        {\r\n            title: 'Photo',\r\n            dataIndex: 'photo',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listAddon(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteAddon(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Addon</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'],pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    // const getDetails = () => {\r\n    //     setAjxRequesting(true);\r\n    //     Services.detailAddon(data.id).then(res => {\r\n    //         setData(res.data || {});\r\n    //         setFileList(res.data?.file ? [res.data?.file] : []);\r\n    //     }).catch(err => {\r\n    //         AntdMsg(err.message, 'error');\r\n    //     }).finally(() => {\r\n    //         setAjxRequesting(false);\r\n    //     });\r\n    // }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveAddon(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (data.id) {\r\n    //         getDetails();\r\n    //     }\r\n    // }, [data.id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Addon'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Icon\">\r\n                                    <UploadImage\r\n                                        value={data.photo ? [data.photo] : []}\r\n                                        onChange={v => setData({...data, photo: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input placeholder=\"Price\" type='number' value={data.price} onChange={e => { handleChange({ price: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Instructions\" required>\r\n                                    <Input placeholder=\"Instructions\" value={data.instructions} onChange={e => { handleChange({ instructions: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'static';\r\n\r\n    static detail(data) {\r\n        return axios.get(this.baseURL + '/details/' + data.type);\r\n    }\r\n\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n        // toolbar = 'undo redo | insert | styleselect | bold italic | fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | forecolor backcolor emoticons | bullist numlist outdent indent | link unlink | image responsivefilemanager table | removeformat code help | fullscreen'\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Form, Row, Col, Spin, Tabs, Card } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, } from 'react';\r\nimport service from '../../services/application';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\n\r\nexport default function Application() {\r\n\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                \r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                            currentTab === 2 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(\"msg\", res.message);\r\n                \r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 3);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (data) => {\r\n        setAjxRequesting(true);\r\n        service.detail(data).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 3 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Aboutus = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst PrivacyPolicy = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'customer-care';\r\n\r\n    static detailCustomer(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listCustomer(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveCustomer(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteCustomer(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/customer_care'\r\n\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function CustomerCare() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n        },\r\n        {\r\n            title: 'SubTitle',\r\n            dataIndex: 'subTitle',\r\n            // width: 150\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row.id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listCustomer(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteCustomer(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Customer Care</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" defaultValue={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detailCustomer(data.id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveCustomer(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.id) {\r\n            getDetails();\r\n        }\r\n    }, [data.id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Customer Care'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"SubTitle\" required>\r\n                                    <Input placeholder=\"SubTitle\" value={data.subTitle} onChange={e => { handleChange({ subTitle: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Email\" required>\r\n                                    <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Phone\" required>\r\n                                    <Input placeholder=\"Phone\" type='number' value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'faq';\r\n\r\n    static detailFAQ(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listFAQ(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveFAQ(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteFAQ(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/faq'\r\n\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function FAQ() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Question',\r\n            dataIndex: 'question',\r\n        },\r\n        {\r\n            title: 'Answer',\r\n            dataIndex: 'answer',\r\n            // width: 150\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row.id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listFAQ(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteFAQ(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of FAQ</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" defaultValue={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detailFAQ(data.id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveFAQ(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.id) {\r\n            getDetails();\r\n        }\r\n    }, [data.id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' FAQ'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Question\" required>\r\n                                    <Input placeholder=\"Question\" value={data.question} onChange={e => { handleChange({ question: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Answer\" required>\r\n                                    <Input placeholder=\"Answer\" value={data.answer} onChange={e => { handleChange({ answer: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'apartment';\r\n\r\n    static detailApartment(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listApartment(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveApartment(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteApartment(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/apartment';\r\n\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Apartment() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Logo',\r\n            dataIndex: 'logo',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listApartment(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteApartment(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Apartment</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by type\" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveApartment(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Apartment'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Logo\">\r\n                                    <UploadImage\r\n                                        value={data.logo ? [data.logo] : []}\r\n                                        onChange={v => setData({ ...data, logo: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Input placeholder=\"Type\" value={data.type} onChange={e => { handleChange({ type: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'floor';\r\n\r\n    static detailFloor(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listFloor(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveFloor(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteFloor(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/floor'\r\n\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Floor() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row.id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listFloor(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteFloor(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Floor</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by type\" defaultValue={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detailFloor(data.id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveFloor(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.id) {\r\n            getDetails();\r\n        }\r\n    }, [data.id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Floor'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Input placeholder=\"Type\" value={data.type} onChange={e => { handleChange({ type: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'membership';\r\n\r\n    static detailMembership(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listMembership(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveMembership(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteMembership(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/membership'\r\n\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Membership() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n        },\r\n        {\r\n            title: 'Validity',\r\n            dataIndex: 'validity',\r\n        },\r\n        {\r\n            title: 'Benefits',\r\n            dataIndex: 'benefits',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row.id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listMembership(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteMembership(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Membership</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" defaultValue={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.detailMembership(data.id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveMembership(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.id) {\r\n            getDetails();\r\n        }\r\n    }, [data.id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Membership'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder=\"Amount\" type='number' value={data.amount} onChange={e => { handleChange({ amount: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Expiry Date\" required>\r\n                                    <DatePicker value={data.validity && dayjs(moment(data.validity).format(\"YYYY-MM-DD\"))}\r\n                                        format='DD MMM YYYY'\r\n                                        disabledDate={(current) => current.isBefore(moment(new Date()).subtract(1, \"day\"))}\r\n                                        onChange={(e) => { handleChange({ validity: new Date(e) }) }} style={{ width: '100%' }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Benefits\" required>\r\n                                    <Input placeholder=\"benefits\" value={data.benefits} onChange={e => { handleChange({ benefits: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Terms And Conditions\" required>\r\n                                    <Input placeholder=\"Terms and Conditions\" value={data.termsAndConditions} onChange={e => { handleChange({ termsAndConditions: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    \r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    // static detailBanner(id, data) {\r\n    //     return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    // }\r\n    static listAddress(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveAddress(data, query) {\r\n        return axios.post(this.baseURL + \"/address/save\", data, { params: query });\r\n    }\r\n    static deleteAddress(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/address';\r\n\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function Address({userId}) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,userId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n        },\r\n        {\r\n            title: 'Landmark',\r\n            dataIndex: 'landmark',\r\n        },\r\n        {\r\n            title: 'City',\r\n            dataIndex: 'city',\r\n        },\r\n        {\r\n            title: 'Pin',\r\n            dataIndex: 'pincode',\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'addressType',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listAddress(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteAddress(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list,userId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list,userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveAddress(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Apartment'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                        <Col span={24}>\r\n                                <Form.Item label=\"Address\" required>\r\n                                    <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Landmark\" required>\r\n                                    <Input placeholder=\"Landmark\" value={data.landmark} onChange={e => { handleChange({ landmark: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Pin\" required>\r\n                                    <Input placeholder=\"Pin\" type='number' value={data.pincode} onChange={e => { handleChange({ pincode: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Address Type\" required>\r\n                                    <Select value={data.addressType} onChange={e => { handleChange({ addressType: e }) }} >\r\n                                        <Select.Option value={'Residential'}>Residential</Select.Option>\r\n                                        <Select.Option value={'Commercial'}>Commercial</Select.Option>\r\n                                        <Select.Option value={'Other'}>Other</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/user';\r\n\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './Address';\r\n\r\n\r\nexport default function User() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const addressModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Photo',\r\n            dataIndex: 'avatar',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { addressModalRef.current.openForm({ id: row.id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of User</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <AddressModal ref={addressModalRef} />\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name email contact \" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                {/* <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by Email \" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by Contact \" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { isEmailVerified: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage\r\n                                        value={data.avatar ? [data.avatar] : []}\r\n                                        onChange={v => setData({ ...data, avatar: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Email\" required>\r\n                                    <Input placeholder=\"Email\" type='email' value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Phone\" required>\r\n                                    <Input placeholder=\"Phone\" type='number' value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Address\" required>\r\n                                    <Input placeholder=\"Address\" value={data.address} onChange={e => { handleChange({ address: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"LandMark\" required>\r\n                                    <Input placeholder=\"LandMark\" value={data.landMark} onChange={e => { handleChange({ landMark: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"PinCode\" required>\r\n                                    <Input placeholder=\"PinCode\" value={data.pinCode} onChange={e => { handleChange({ pinCode: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Province\" required>\r\n                                    <Input placeholder=\"Province\" value={data.province} onChange={e => { handleChange({ province: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                        <Form.Item label={data?._id ? \"Update Password\" : \"Set Password\"} required={data?._id ? false : true}>\r\n                                            <Input type='password' value={data?.password} onChange={e => { handleChange({ password: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal >\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddressModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Address of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address userId={data.id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'worker';\r\n\r\n    static detailWorker(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listWorker(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveWorker(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteWorker(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static earnDetail(data) {\r\n        return axios.get( '/worker-earn/list', { params: data });\r\n    }\r\n    static saveEarn(data, query) {\r\n        return axios.post(\"/worker-earn/paid\", data, { params: query });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag, Divider, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined, PoundOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/worker';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function Worker() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [wid, setWid] = useState(\"\")\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const addNewModalRef1 = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n        },\r\n        {\r\n            title: 'Photo',\r\n            dataIndex: 'avatar',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Payment Status',\r\n            dataIndex: 'paymentStatus',\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Button type=\"primary\" icon={<PoundOutlined />} onClick={() => {\r\n                        setWid(row.id)\r\n                        addNewModalRef1.current.openForm1(row.id)\r\n                    }}>Payment Status</Button>\r\n                </>\r\n            }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listWorker(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteWorker(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, addNewModalRef1 }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Worker</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <AddForm1 ref={addNewModalRef1} {...{ list, wid }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, addNewModalRef1 }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name email contact\" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { isEmailVerified: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveWorker(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Worker'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Name\" required>\r\n                                            <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" type='number' value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" type='email' value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Age\" required>\r\n                                            <Input placeholder=\"Age\" type='number' value={data.age} onChange={e => { handleChange({ age: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Gender\" required>\r\n                                            <Select value={data.gender} onChange={e => { handleChange({ gender: e }) }} >\r\n                                                <Select.Option value={\"Male\"}>Male</Select.Option>\r\n                                                <Select.Option value={'Female'}>Female</Select.Option>\r\n                                                <Select.Option value={'Other'}>Other</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage\r\n                                        value={data.avatar ? [data.avatar] : []}\r\n                                        onChange={v => setData({ ...data, avatar: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\" Address\">\r\n                                    <Input.TextArea placeholder=\"Present Address\" onChange={e => { handleChange({ address: e.target.value }) }} value={data.address} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Reference Phone\" >\r\n                                    <Input placeholder=\"Reference Phone\" type='number' value={data.reference_contact} onChange={e => { handleChange({ reference_contact: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Insurance No.\" required>\r\n                                    <Input placeholder=\"Insurance No.\" type='number' value={data.insuranceNo} onChange={e => { handleChange({ insuranceNo: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Job Type\" required>\r\n                                    <Select value={data.jobType} onChange={e => { handleChange({ jobType: e }) }} >\r\n                                        <Select.Option value={\"Full-time\"}>Full-Time</Select.Option>\r\n                                        <Select.Option value={'Half-time'}>Half-Time</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Employment Type\" required>\r\n                                    <Select value={data.employmentType} onChange={e => { handleChange({ employmentType: e }) }} >\r\n                                        <Select.Option value={\"Student\"}>Student</Select.Option>\r\n                                        <Select.Option value={'Employee'}>Employee</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Divider orientation=\"left\">Bank Details</Divider>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Bank Name\" required>\r\n                                    <Input placeholder=\"Bank Name\" value={data.bank_name} onChange={e => { handleChange({ bank_name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Bank Branch Name\" required>\r\n                                    <Input placeholder=\"Bank Branch Name\" value={data.bank_branch_name} onChange={e => { handleChange({ bank_branch_name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Account Holder Name\" required>\r\n                                    <Input placeholder=\"Account Holder Name\" value={data.account_holder_name} onChange={e => { handleChange({ account_holder_name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Account No.\" required>\r\n                                    <Input placeholder=\"Account No.\" value={data.accountNo} onChange={e => { handleChange({ accountNo: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"IFSC Code\" required>\r\n                                    <Input placeholder=\"IFSC Code\" value={data.ifsc_code} onChange={e => { handleChange({ ifsc_code: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Divider />\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Passport No.\" required>\r\n                                    <Input placeholder=\"Passport No.\" value={data.passportNo} onChange={e => { handleChange({ passportNo: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Visa Type\" required>\r\n                                    <Select value={data.visa_type} onChange={e => { handleChange({ visa_type: e }) }} >\r\n                                        <Select.Option value={\"Tourist\"}>Tourist</Select.Option>\r\n                                        <Select.Option value={'Work-visit'}>Work-visit</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Emigration Type\" required>\r\n                                    <Select value={data.emigration_type} onChange={e => { handleChange({ emigration_type: e }) }} >\r\n                                        <Select.Option value={\"ECR\"}>ECR</Select.Option>\r\n                                        <Select.Option value={'NON-ECR'}>NON-ECR</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}></Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Passport Image\">\r\n                                    <UploadImage\r\n                                        value={data.passport_picture ? [data.passport_picture] : []}\r\n                                        onChange={v => setData({ ...data, passport_picture: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Driving License Image\">\r\n                                    <UploadImage\r\n                                        value={data.driving_license_picture ? [data.driving_license_picture] : []}\r\n                                        onChange={v => setData({ ...data, driving_license_picture: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Visa Image\">\r\n                                    <UploadImage\r\n                                        value={data.visa_picture ? [data.visa_picture] : []}\r\n                                        onChange={v => setData({ ...data, visa_picture: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label={data?._id ? \"Update Password\" : \"Set Password\"} required={data?._id ? false : true}>\r\n                                    <Input type='password' value={data?.password} onChange={e => { handleChange({ password: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal >\r\n        </>\r\n    );\r\n});\r\nconst AddForm1 = forwardRef((props, ref) => {\r\n    const { list, wid } = props;\r\n    const [open1, setOpen1] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    console.log(wid, 'qwertyui');\r\n    const handleChange = (v, k) => {\r\n        let varDt = data;\r\n        let keys = k?.split('.');\r\n        for (let i = 0; i < keys?.length; i++) {\r\n            if (i + 1 === keys.length) {\r\n                varDt[keys[i]] = v;\r\n            } else {\r\n                if (typeof varDt[keys[i]] === 'undefined') {\r\n                    if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                        varDt[keys[i]] = [];\r\n                    } else {\r\n                        varDt[keys[i]] = {};\r\n                    }\r\n                } varDt = varDt[keys[i]];\r\n            }\r\n        }\r\n        setData({ ...data, ...v });\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm1(dt) {\r\n            setOpen1(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { isEmailVerified: true, workerId: wid }\r\n            );\r\n        }\r\n    }));\r\n    useEffect(() => {\r\n        console.log(data, \"wowwwwwwwwwwwwwwwwwwwwwwwwww\");\r\n    }, [data])\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        Services.earnDetail({ workerId: data._id }).then(res => {\r\n            setData(res.data || {});\r\n            // setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n    const save = (dt) => {\r\n        console.clear();\r\n        console.log(111, dt);\r\n        dt = !dt ? data : dt;\r\n        console.log(\"HHHH\", dt);\r\n        // return;\r\n        setAjxRequesting(true);\r\n        Services.saveEarn(dt).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            // setOpen1(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open1) {\r\n            setData({ id: null });\r\n        } else {\r\n            setData({ workerId: data._id });\r\n        }\r\n    }, [open1]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={'Worker Payment Status'}\r\n                style={{ top: 20 }}\r\n                open={open1}\r\n                // okText=\"Save\"\r\n                // onOk={save}\r\n                // okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen1(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Typography.Title level={4} style={{ textAlign: 'center' }}>Total Earning:-  ${data?.totalEarning}</Typography.Title>,\r\n                    <Button key=\"cancel\" onClick={() => { setOpen1(false); }}>Cancel</Button>,\r\n                    // <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={24}>\r\n                                <Form.Item>\r\n                                    <Variant {...{ variantDetails: data.earnings, parentKay: 'earnings', handleChange, completeData: data, save }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal >\r\n        </>\r\n    );\r\n});\r\n\r\nfunction Variant({ variantDetails: data, parentKay, handleChange, completeData: newData, save }) {\r\n    console.log(parentKay, \"dfghjk\");\r\n    return (\r\n        <React.Fragment>\r\n            <Divider orientation=\"left\">{parentKay === 'variants' ? \"Payemnt Status\" : \"Payemnt Status\"}</Divider>\r\n            <Table\r\n                {...{\r\n                    bordered: false,\r\n                    size: 'small',\r\n                    showHeader: true,\r\n                    footer: null,\r\n                    tableLayout: undefined,\r\n                }}\r\n                // handleChange( { `${parentKay}.${i}.paymentStatus`: e } )\r\n\r\n                columns={\r\n                    [\r\n                        {\r\n                            title: 'Booking Name',\r\n                            dataIndex: 'booking',\r\n                            width: 300,\r\n                            render: (v, row, i) => <span>{v?.apartmentId?.type}</span>\r\n                        },\r\n                        {\r\n                            title: 'Payment Status',\r\n                            dataIndex: 'paymentStatus',\r\n                            width: 300,\r\n                            render: (v, row, i) => {\r\n                                return <>\r\n                                    <Select placeholder=\"Payment Success/Pending\" value={v} onChange={(e) => { handleChange((e), `${parentKay}.${i}.paymentStatus`) }}>\r\n                                        <Select.Option value=\"paid\">Paid</Select.Option>\r\n                                        <Select.Option value=\"unpaid\">Unpaid</Select.Option>\r\n                                    </Select>\r\n                                </>\r\n                            },\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            // dataIndex: 'price',\r\n                            width: 100,\r\n                            render: (v, row, i) => {\r\n                                return <>\r\n                                    <Button type=\"primary\" onClick={() => {\r\n                                        console.log(\"data---\", data?.find(vv => vv.id == v.id))\r\n                                        save(data?.find(vv => vv.id == v.id));\r\n                                    }}>Save</Button>\r\n                                </>\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n                dataSource={data?.length ? data?.map((v, i) => ({ ...v, key: i })) : []}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'subscription';\r\n\r\n    static listSubscription(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/subscription'\r\n\r\nimport moment from 'moment';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Subscription() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'User Name',\r\n            dataIndex: 'user',\r\n            render: v => v?.name\r\n        },\r\n        {\r\n            title:'Membership',\r\n            dataIndex:'membership',\r\n            render:v =>v.name\r\n        },\r\n        {\r\n            title:'Amount',\r\n            dataIndex:'membership',\r\n            render:v =>v.amount\r\n        },\r\n        {\r\n            title:'Validity',\r\n            dataIndex:'validity',\r\n            render:v =>moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listSubscription(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteFloor(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Subscription</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" defaultValue={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {/* <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item> */}\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'review';\r\n\r\n    static listReview(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static deleteReview(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/review'\r\n\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\n\r\n\r\nexport default function Reviews() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'User Name',\r\n            dataIndex: 'user',\r\n            render: v => v?.name\r\n        },\r\n        {\r\n            title: 'Service',\r\n            dataIndex: 'service',\r\n            render: v => v?.name\r\n        },\r\n        {\r\n            title: 'Rating',\r\n            dataIndex: 'rating',\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listReview(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteReview(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Reviews</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            {/* <AddForm ref={addNewModalRef} {...{ list }} /> */}\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" defaultValue={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {/* <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item> */}\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'voucher';\r\n\r\n    static detailVoucher(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listVoucher(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveVoucher(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteVoucher(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\n\r\nimport service from '../../services/voucher';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport util from '../../utils/util';\r\n\r\nexport default function Voucher() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Code',\r\n            width: 100,\r\n            dataIndex: 'code',\r\n        },\r\n        {\r\n            title: 'EndDate',\r\n            width: 100,\r\n            dataIndex: 'expiryDate',\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')}</span>\r\n        },\r\n        {\r\n            title: \"Discount Value\",\r\n            dataIndex: \"discountValue\",\r\n            width: 120,\r\n            render: (v, row) => row.discountType === 'flat' ? <b>₹ {v}</b> : <b>{v} %</b>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 60,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listVoucher(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v.id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteVoucher(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Voucher</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { type: 'percent', status: true }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveVoucher(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data.id) {\r\n            handleChange({ code: util.removeSpecialChars(data?.name)?.toUpperCase() });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Voucher'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Code\" required>\r\n                                    <Input placeholder=\"Code\" value={data.code} onChange={e => { handleChange({ code: util.removeSpecialChars(e.target.value)?.toUpperCase() }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                             <Col span={6}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.type} onChange={e => { handleChange({ type: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Discount Value\" required>\r\n                                    <Input type='number' placeholder=\"Discount Value\" addonBefore={data.type === 'percent' ? '%' : '₹'} value={data.discountValue}\r\n                                        onChange={e => {\r\n                                            if (data.type === 'flat') {\r\n                                                handleChange({ discountValue: e.target.value, maxDiscountValue: e.target.value })\r\n                                            } else {\r\n\r\n                                                handleChange({ discountValue: e.target.value })\r\n                                            }\r\n                                        }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {(data.type === \"flat\") ?\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Max Discount Value\" >\r\n                                        <Input type='number' placeholder=\"Max Discount Price\" addonBefore=\"₹\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} disabled />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                :\r\n                                <Col span={6}>\r\n                                    <Form.Item label=\"Max Discount Value\" >\r\n                                        <Input type='number' placeholder=\"Max Discount Price\" addonBefore=\"₹\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            }\r\n\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Minimun Order Value\">\r\n                                    <Input type='number' placeholder=\"Minimun Order Price\" addonBefore=\"₹\" value={data.minOrderPrice} onChange={e => { handleChange({ minOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Expiry Date\" required>\r\n                                    <DatePicker value={data.expiryDate && dayjs(moment(data.expiryDate).format(\"YYYY-MM-DD\"))}\r\n                                        format='DD MMM YYYY'\r\n                                        disabledDate={(current) => current.isBefore(moment(new Date()).subtract(1, \"day\"))}\r\n                                        onChange={(e) => { handleChange({ expiryDate: new Date(e) }) }} style={{ width: '100%' }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'booking';\r\n\r\n    static detailBooking(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listBooking(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveWorker(data, query) {\r\n        return axios.post(\"/job-assign/assign\", data, { params: query });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  Modal,\r\n  Spin,\r\n  Typography,\r\n  Image,\r\n  Input,\r\n  Select,\r\n  Tag,\r\n  DatePicker,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n  CheckCircleOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport Services from \"../../services/booking\";\r\nimport UserServices from \"../../services/user\";\r\nimport WorkerServices from \"../../services/worker\";\r\n// import bookingService from '../../services/booking'\r\nimport moment from \"moment\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\n\r\nexport default function Booking() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selected, setSelected] = useState([]);\r\n  const [wid, setWid] = useState(\"\");\r\n  const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n  const [user, setUser] = useState([]);\r\n  const [worker, setWorker] = useState([]);\r\n  const addNewModalRef = useRef();\r\n  // const addNewModalRef1 = useRef();\r\n  const columns = [\r\n    {\r\n      title: \"Service\",\r\n      dataIndex: \"service\",\r\n      render: (v) => v.name,\r\n    },\r\n    {\r\n      title: \"UserName\",\r\n      dataIndex: \"user\",\r\n      render: (v) => v.name,\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"user\",\r\n      render: (v) => v.phone,\r\n    },\r\n    {\r\n      title: \"Apartment\",\r\n      dataIndex: \"apartment\",\r\n      render: (v) => v.type,\r\n    },\r\n    {\r\n      title: \"Choosen Time\",\r\n      dataIndex: \"serviceTime\",\r\n      // render:v =>moment(v).format('h:mm a')\r\n    },\r\n    {\r\n      title: \"Assigned To\",\r\n      // dataIndex: 'paymentStatus',\r\n      render: (v, row) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => {\r\n                setWid(row.id);\r\n                addNewModalRef.current.openForm1(row.id);\r\n              }}\r\n            >\r\n              Assigned To\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      width: 80,\r\n      render: (isActive) => {\r\n        if (isActive) {\r\n          return <Tag color=\"green\">Active</Tag>;\r\n        } else {\r\n          return <Tag color=\"red\">Inactive</Tag>;\r\n        }\r\n      },\r\n    },\r\n  ].filter((item) => !item.hidden);\r\n\r\n  function list() {\r\n    setLoading(true);\r\n    Services.listBooking(qData)\r\n      .then((res) => {\r\n        setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n        setQData({\r\n          ...qData,\r\n          limit: res.extra.limit,\r\n          page: res.extra.page,\r\n          total: res.extra.total,\r\n        });\r\n      })\r\n      .catch((err) => {})\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n  tableColumns[0].fixed = true;\r\n  tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n  const tableProps = {\r\n    bordered: true,\r\n    loading,\r\n    size: \"small\",\r\n    title: () => (\r\n      <Search {...{ addNewModalRef, selected, qData, setQData, list, user }} />\r\n    ),\r\n    showHeader: true,\r\n    footer: () => <Pagination {...{ qData, setQData }} />,\r\n    rowSelection: {\r\n      onChange: (selectedRowKeys) => {\r\n        setSelected(selectedRowKeys);\r\n      },\r\n    },\r\n    tableLayout: undefined,\r\n  };\r\n  function listUser() {\r\n    UserServices.listUser()\r\n      .then((res) => {\r\n        setUser(res.data || []);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(\"User data not loaded\", \"error\");\r\n      });\r\n  }\r\n  function listUser() {\r\n    WorkerServices.listWorker()\r\n      .then((res) => {\r\n        setWorker(res.data || []);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(\"User data not loaded\", \"error\");\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    list();\r\n    listUser();\r\n  }, [qData.page, qData.limit]);\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={5} style={{ marginTop: 0 }}>\r\n        List of Bookings\r\n      </Typography.Title>\r\n      <Table\r\n        {...tableProps}\r\n        pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n        columns={tableColumns}\r\n        dataSource={data.length ? data : []}\r\n        scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n      />\r\n      <AddForm ref={addNewModalRef} {...{ list, wid, user, worker, qData }} />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, qData, setQData, list, user }) {\r\n  const [userNames, setUserNames] = useState([]);\r\n\r\n  const onChange = (v, key) => {\r\n    console.log(\"this is v\", v);\r\n    qData[key] = v;\r\n    if (v === undefined || v === \"\") {\r\n      qData[key] = \"\";\r\n      list();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const Names = user?.map((item) => ({\r\n      label: item.name ? (\r\n        <>\r\n          <p style={{ padding: \"0px\", margin: \"0px\" }}>{item.name}</p>\r\n          <p style={{ fontSize: \"12px\", margin: \"0px\" }}>\r\n            <Typography.Text type=\"danger\">@{item.phone}</Typography.Text>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        item.phone\r\n      ),\r\n      value: item.id,\r\n      searchKey: item.name + item.phone,\r\n    }));\r\n    setUserNames(Names);\r\n  }, [user]);\r\n\r\n  return (\r\n    <Form onSubmitCapture={list} className=\"search-form\">\r\n      <Row gutter={[12, 2]}>\r\n        <Col xs={24} xl={4}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Select\r\n              showSearch\r\n              allowClear\r\n              placeholder=\"Select by username / phone\"\r\n              optionFilterProp=\"children\"\r\n              onChange={(e) => onChange(e, \"userId\")}\r\n              filterOption={(input, option) =>\r\n                (option?.searchKey ?? \"\")\r\n                  .toLowerCase()\r\n                  .includes(input.toLowerCase())\r\n              }\r\n              options={userNames}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} xl={6}>\r\n          <Form.Item>\r\n            <DatePicker.RangePicker\r\n              format=\"DD MMM YYYY\"\r\n              onChange={(e) => onChange(e, \"Date\")}\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col xs={24} xl={4}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={3}></Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\nconst AddForm = forwardRef((props, ref) => {\r\n  const { list, wid, user, worker, qData } = props;\r\n  const [open1, setOpen1] = useState(false);\r\n  const [data, setData] = useState({ aspect: 1 });\r\n  const [ajxRequesting, setAjxRequesting] = useState(false);\r\n  const [saveWorker, setSaveWorker] = useState(false);\r\n  const [search, setSearch] = useState(\"\")\r\n  // const [fileList, setFileList] = useState([]);\r\n\r\n\r\n  const onChange = (v, key) => {\r\n    console.log(\"this is v\", v);\r\n    qData[key] = v;\r\n    if (v === undefined || v === \"\") {\r\n      qData[key] = \"\";\r\n      list();\r\n    }\r\n  };\r\n  console.log(wid, \"qwertyui\");\r\n  const handleChange = (v, k) => {\r\n    let varDt = data;\r\n    let keys = k?.split(\".\");\r\n    for (let i = 0; i < keys?.length; i++) {\r\n      if (i + 1 === keys.length) {\r\n        varDt[keys[i]] = v;\r\n      } else {\r\n        if (typeof varDt[keys[i]] === \"undefined\") {\r\n          if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n            varDt[keys[i]] = [];\r\n          } else {\r\n            varDt[keys[i]] = {};\r\n          }\r\n        }\r\n        varDt = varDt[keys[i]];\r\n      }\r\n    }\r\n    setData({ ...data, ...v });\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    openForm1(dt) {\r\n      setOpen1(true);\r\n      setData(dt ? { bookingId: dt } : { bookingId: wid });\r\n    },\r\n  }));\r\n  useEffect(() => {\r\n    console.log(data, \"wowwwwwwwwwwwwwwwwwwwwwwwwww\");\r\n  }, [data]);\r\n\r\n  // const getDetails = () => {\r\n  //     setAjxRequesting(true);\r\n  //     Services.earnDetail({ workerId: data._id }).then(res => {\r\n  //         setData(res.data || {});\r\n  //         // setFileList(res.data?.imgUrl ? [res.data?.imgUrl] : []);\r\n  //     }).catch(err => {\r\n  //         AntdMsg(err.message, 'error');\r\n  //     }).finally(() => {\r\n  //         setAjxRequesting(false);\r\n  //     });\r\n  // }\r\n\r\n  const save = (dt) => {\r\n    console.clear();\r\n    console.log(111, dt);\r\n    dt = !dt ? data : dt;\r\n    console.log(\"HHHH\", dt);\r\n    // return;\r\n    setAjxRequesting(true);\r\n    Services.saveWorker(data)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        handleChange({ ...res.data });\r\n        list();\r\n        setOpen1(false);\r\n      })\r\n      .catch((err) => {\r\n        if (typeof err.message === \"object\") {\r\n          let dt = err.message[Object.keys(err.message)[0]];\r\n          AntdMsg(dt, \"error\");\r\n        } else {\r\n          AntdMsg(err.message, \"error\");\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setAjxRequesting(false);\r\n      });\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //     if (data._id) {\r\n  //         getDetails();\r\n  //     }\r\n  // }, [data._id]);\r\n\r\n//   useEffect(() => {\r\n//     if (!open1) {\r\n//       setData({ id: null });\r\n//     } else {\r\n//       setData({ workerId: data._id });\r\n//     }\r\n//   }, [open1]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={\"Allot Worker\"}\r\n        style={{ top: 20 }}\r\n        open={open1}\r\n        okText=\"Save\"\r\n        onOk={save}\r\n        okButtonProps={{ disabled: ajxRequesting }}\r\n        onCancel={() => {\r\n          setOpen1(false);\r\n        }}\r\n        destroyOnClose\r\n        maskClosable={false}\r\n        width={600}\r\n        // className=\"app-modal-body-overflow\"\r\n        footer={[\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={() => {\r\n              setOpen1(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"save\" type=\"primary\" onClick={save}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Spin\r\n          spinning={ajxRequesting}\r\n          indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n        >\r\n          <Form layout=\"vertical\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={8}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by Name\" onChange={e => setSearch(e.target.value)} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n              <Col span={24}>\r\n                <Form.Item label=\"User List\" required>\r\n                  <Row gutter={[10, 10]}>\r\n                    {worker?.filter((v) => search ? (v.name+v.email).includes(search) : true )?.map((v, i) => (\r\n                      <Col key={v.id}>\r\n                        <Button\r\n                          icon={\r\n                            data.workerId === v.id ? (\r\n                              <CheckCircleOutlined />\r\n                            ) : null\r\n                          }\r\n                          type={data.workerId === v.id ? \"primary\" : \"default\"}\r\n                          onClick={() => {\r\n                            handleChange(v.id, \"workerId\");\r\n                          }}\r\n                        >\r\n                          {v.name} <Typography.Text type=\"danger\"> @{v.email}</Typography.Text>\r\n                        </Button>\r\n                      </Col>\r\n                    ))}\r\n                  </Row>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    static detailBanner(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listBanner(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static saveBanner(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deleteBanner(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/banner';\r\n\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport moment from 'moment';\r\n\r\nexport default function Banner() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'image_url',\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title:'Uploaded At',\r\n            dataIndex:'updatedAt',\r\n            render:v =>moment(v).format('DD MMM YYYY')\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listBanner(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteBanner(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Banner</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col> */}\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveBanner(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Image\">\r\n                                    <UploadImage\r\n                                        value={data.image_url ? [data.image_url] : []}\r\n                                        onChange={v => setData({ ...data, image_url: v[0] })}\r\n                                        listType=\"picture-card\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'quiz';\r\n\r\n    /// quiz video\r\n    static listQuizVideo(data) {\r\n        return axios.get(this.baseURL + '/video/get-quizzes', { params: data });\r\n    }\r\n    static saveQuizVideo(data, query) {\r\n        return axios.post(this.baseURL + \"/video/save\", data, { params: query });\r\n    }\r\n    static deleteQuizVideo(id) {\r\n        return axios.post(this.baseURL + '/video/delete', { ids: id });\r\n    }\r\n\r\n    //// quiz question \r\n    static listQuizQuestion(data) {\r\n        return axios.get(this.baseURL + '/question/list', { params: data });\r\n    }\r\n    static saveQuizQuestion(data, query) {\r\n        return axios.post(this.baseURL + \"/question/save\", data, { params: query });\r\n    }\r\n    static deleteQuizQuestion(id) {\r\n        return axios.post(this.baseURL + '/question/delete', { ids: id });\r\n    }\r\n    //// quiz options \r\n    static listQuizOption(data) {\r\n        return axios.get(this.baseURL + '/options/list', { params: data });\r\n    }\r\n    static saveQuizOption(data, query) {\r\n        return axios.post(this.baseURL + \"/options/save\", data, { params: query });\r\n    }\r\n    //// quiz answer \r\n    static listQuizAnswer(data) {\r\n        return axios.get(this.baseURL + '/answer/list', { params: data });\r\n    }\r\n    static saveQuizAnswer(data, query) {\r\n        return axios.post(this.baseURL + \"/answer/save\", data, { params: query });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/quiz';\r\n\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function QuizVideo() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n\r\n        {\r\n            title: 'Quiz Video',\r\n            dataIndex: 'video',\r\n            width: 200,\r\n            render: (v) => {\r\n                return (\r\n                    <>\r\n                        <video height=\"80\" controls>\r\n                            <source src={v} type=\"video/mp4\" />\r\n                        </video>\r\n                    </>\r\n                );\r\n            }\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listQuizVideo(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteQuizVideo(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Quiz Video</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    {/* <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item> */}\r\n                </Col>\r\n                <Col span={3}>\r\n                    {/* <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item> */}\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveQuizVideo(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Quiz Video'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Video\">\r\n                                    <UploadImage\r\n                                        value={data.video ? [data.video] : []}\r\n                                        onChange={v => setData({ ...data, video: v[0] })}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/quiz';\r\n\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function QuizOption({questionId}) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,questionId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Option',\r\n            dataIndex: 'option',\r\n        },\r\n        // {\r\n        //     title: 'Status',\r\n        //     dataIndex: 'status',\r\n        //     width: 80,\r\n        //     render: isActive => {\r\n        //         if (isActive) {\r\n        //             return <Tag color='green'>Active</Tag>\r\n        //         } else {\r\n        //             return <Tag color='red'>Inactive</Tag>\r\n        //         }\r\n        //     },\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {/* <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm> */}\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listQuizOption(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        // Services.deleteAddress(id).then(res => {\r\n        //     AntdMsg(res.message);\r\n        //     list();\r\n        //     setSelected([]);\r\n        // }).catch(err => {\r\n        //     AntdMsg(err.message, 'error');\r\n        // })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list,data }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{  position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list,questionId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list,data }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n    console.log(\"this is data length\",data?.length)\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    {/* <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item> */}\r\n                </Col>\r\n                <Col span={3}>\r\n                    {/* <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item> */}\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        data?.length !== 4 ?\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item> : \"\"\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list,questionId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : {quizQuestionId: questionId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveQuizOption(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Quiz Option'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                        <Col span={24}>\r\n                                <Form.Item label=\"Option\" required>\r\n                                    <Input placeholder=\"Option\" value={data.option} onChange={e => { handleChange({ option: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/quiz';\r\n\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\n\r\n\r\nexport default function QuizAnswer({questionId}) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [quiz, setQuiz] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20,questionId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Answer',\r\n            dataIndex: 'quizOption',\r\n            render: (v) => {\r\n                return <p>{v.option}</p>\r\n            }\r\n        },\r\n        // {\r\n        //     title: 'Status',\r\n        //     dataIndex: 'status',\r\n        //     width: 80,\r\n        //     render: isActive => {\r\n        //         if (isActive) {\r\n        //             return <Tag color='green'>Active</Tag>\r\n        //         } else {\r\n        //             return <Tag color='red'>Inactive</Tag>\r\n        //         }\r\n        //     },\r\n        // },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {/* <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm> */}\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listQuizAnswer(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listOptions() {\r\n        Services.listQuizOption({questionId})\r\n            .then(res => { setQuiz(res.data || []); }).catch(err => { AntdMsg('Option data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        // Services.deleteAddress(id).then(res => {\r\n        //     AntdMsg(res.message);\r\n        //     list();\r\n        //     setSelected([]);\r\n        // }).catch(err => {\r\n        //     AntdMsg(err.message, 'error');\r\n        // })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list,data }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listOptions()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list,questionId,quiz}} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list,data }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    {/* <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item> */}\r\n                </Col>\r\n                <Col span={3}>\r\n                    {/* <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item> */}\r\n                </Col>\r\n                <Col span={5}>\r\n                    {\r\n                        data?.length !== 1 ?\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item> : \"\"\r\n                    }\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list,questionId,quiz } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : {quizQuestionId: questionId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveQuizAnswer(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Quiz Answer'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                        <Col span={24}>\r\n                        <Form.Item label=\"Choose Answer\" >\r\n                                    <Select value={data.quizOptionId} onChange={v => { handleChange({ quizOptionId: v }) }}\r\n                                        options={\r\n                                            quiz.map(v => (\r\n                                                {\r\n                                                    value: v.id,\r\n                                                    label: <>\r\n                                                        <p style={{ padding: \"0px\", margin: \"0px\" }}>{v?.option}</p>\r\n                                                    </>,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../../services/quiz';\r\n\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport QuizOption from './QuizOption';\r\nimport QuizAnswer from './QuizAnswer';\r\n\r\n\r\nexport default function QuizQuestion() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const optionsModalRef = useRef();\r\n    const answerModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Question',\r\n            dataIndex: 'question',\r\n        },\r\n        {\r\n            title: 'Options',\r\n            dataIndex: 'id',\r\n            // width: 100,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { optionsModalRef.current.openForm({ id: row.id, name: row.title }) }} >Options</Button>\r\n        },\r\n        {\r\n            title: 'Answer',\r\n            dataIndex: 'id',\r\n            // width: 100,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { answerModalRef.current.openForm({ id: row.id, name: row.title }) }} >Answer</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: 'id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this Service?\"\r\n                        onConfirm={() => { deleteData(row.id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listQuizQuestion(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteQuizQuestion(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Quiz Question</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n            <OptionModal ref={optionsModalRef} />\r\n            <AnswerModal ref={answerModalRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by question\" defaultValue={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveQuizQuestion(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ file: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data.id ? 'Add' : 'Edit') + ' Quiz Question'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Question\" required>\r\n                                    <Input placeholder=\"Question\" value={data.question} onChange={e => { handleChange({ question: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst OptionModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>List of Options</>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <QuizOption questionId={data.id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AnswerModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>List of Answer</>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <QuizAnswer questionId={data.id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'notification';\r\n\r\n    static detailFloor(id, data) {\r\n        return axios.get(this.baseURL + '/detail/' + id, { params: data });\r\n    }\r\n    static listFloor(data) {\r\n        return axios.get(this.baseURL + '/get-notifications', { params: data });\r\n    }\r\n    static saveFloor(data, query) {\r\n        return axios.post(this.baseURL + \"/push-notification\", data, { params: query });\r\n    }\r\n    static deleteFloor(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input, Select, Tag } from 'antd';\r\nimport { DeleteOutlined, LoadingOutlined, SendOutlined, NotificationOutlined, WarningOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Services from '../../services/notification'\r\nimport TinyMce from '../../utils/TinyMce';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport HTMLRenderer from 'react-html-renderer'\r\n\r\n\r\nexport default function Notification() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width:200\r\n        },\r\n        {\r\n            title: 'Message',\r\n            dataIndex: 'description',\r\n            render:(v) => (<HTMLRenderer html={v}></HTMLRenderer>)\r\n        },\r\n        // {\r\n        //     title: 'User',\r\n        //     dataIndex: 'type',\r\n        // },\r\n        // {\r\n        //     title: 'Offer',\r\n        //     dataIndex: 'type',\r\n        // },\r\n        // {\r\n        //     title: '',\r\n        //     dataIndex: 'type',\r\n        // },\r\n        // {\r\n        //     title: 'Type',\r\n        //     dataIndex: 'type',\r\n        // },\r\n        // {\r\n        //     title: 'Status',\r\n        //     dataIndex: 'status',\r\n        //     width: 80,\r\n        //     render: isActive => {\r\n        //         if (isActive) {\r\n        //             return <Tag color='green'>Active</Tag>\r\n        //         } else {\r\n        //             return <Tag color='red'>Inactive</Tag>\r\n        //         }\r\n        //     },\r\n        // },\r\n        // {\r\n        //     title: 'Action',\r\n        //     dataIndex: 'id',\r\n        //     width: 70,\r\n        //     render: (v, row) => {\r\n        //         return <>\r\n        //             <Popconfirm\r\n        //                 title=\"Are you sure to delete this Service?\"\r\n        //                 onConfirm={() => { deleteData(row.id); }}\r\n        //                 okText=\"Yes\"\r\n        //                 cancelText=\"No\"\r\n        //             >\r\n        //                 <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n        //             </Popconfirm>\r\n        //             <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row.id) }} />\r\n        //         </>\r\n        //     }\r\n        // },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        Services.listFloor(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v.id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        Services.deleteFloor(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        // rowSelection: {\r\n        //     onChange: (selectedRowKeys) => {\r\n        //         setSelected(selectedRowKeys);\r\n        //     },\r\n        // },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>Notification List</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    const onChange = (v, key) => {\r\n        qData[key] = v;\r\n        if (v === undefined || v === \"\") {\r\n            qData[key] = \"\";\r\n            list()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" value={qData.key} onChange={e => onChange(e.target.value,\"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<SendOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Send New Notification 🔔</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { id: dt }\r\n                    : {}\r\n            );\r\n        }\r\n    }));\r\n\r\n    // const getDetails = () => {\r\n    //     setAjxRequesting(true);\r\n    //     Services.detailFloor(data.id).then(res => {\r\n    //         setData(res.data || {});\r\n    //     }).catch(err => {\r\n    //         AntdMsg(err.message, 'error');\r\n    //     }).finally(() => {\r\n    //         setAjxRequesting(false);\r\n    //     });\r\n    // }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        Services.saveFloor(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     if (data.id) {\r\n    //         getDetails();\r\n    //     }\r\n    // }, [data.id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={'Send New Notification'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                // className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" icon={<WarningOutlined />}  onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" icon={<NotificationOutlined />} onClick={save}>Send Notification</Button>\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"User Name\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={12}>\r\n                                <Form.Item label=\"Offer\" required>\r\n                                    <Input placeholder=\"Offer\" value={data.type} onChange={e => { handleChange({ type: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <TinyMce initialValue={data.description} onChange={(v) => { data.description = v; }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {/* <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\r\n\r\nimport Dashboard from '../pages/Dashboard';\r\nimport Service from '../pages/Service';\r\nimport Addon from '../pages/Addon';\r\nimport Application from '../pages/Application';\r\nimport CustomerCare from '../pages/CustomerCare';\r\nimport FAQ from '../pages/FAQ';\r\nimport Apartment from '../pages/Apartment';\r\nimport Floor from '../pages/Floor';\r\nimport Membership from '../pages/Membership';\r\nimport User from '../pages/management/User';\r\nimport Worker from '../pages/management/Worker';\r\nimport Subscription from '../pages/Subscription';\r\nimport Reviews from '../pages/Reviews';\r\nimport Voucher from '../pages/Voucher';\r\nimport Booking from '../pages/Booking';\r\nimport Banner from '../pages/Banner';\r\nimport QuizVideo from '../pages/quiz/QuizVideo';\r\nimport QuizQuestion from '../pages/quiz/QuizQuestion';\r\nimport Notification from '../pages/notification';\r\n// import PaymentStatus from '../pages/paymentStatus';\r\n\r\nconst routes = [\r\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\r\n    { title: 'Service', icon: ApartmentOutlined, url: '/service', component: Service },\r\n    { title: 'Addon', icon: ApartmentOutlined, url: '/addon', component: Addon },\r\n    { title: 'Membership', icon: ApartmentOutlined, url: '/membership', component: Membership },\r\n    { title: 'Subscription', icon: ApartmentOutlined, url: '/subscription', component: Subscription },\r\n    { title: 'Banner', icon: ApartmentOutlined, url: '/banner', component:Banner },\r\n    { title: 'Reviews', icon: ApartmentOutlined, url: '/reviews', component:Reviews },\r\n    { title: 'Voucher', icon: ApartmentOutlined, url: '/voucher', component:Voucher },\r\n    { title: 'Bookings', icon: ApartmentOutlined, url: '/bookings', component:Booking },\r\n    { title: 'Notification', icon: ApartmentOutlined, url: '/Nntification', component:Notification },\r\n    { title: 'Home', icon: ApartmentOutlined, url: '/apartment', children:[\r\n\r\n        { title: 'Apartment', icon: ApartmentOutlined, url: '/', component: Apartment },\r\n        { title: 'Floor', icon: ApartmentOutlined, url: '/floor', component: Floor },\r\n    ] },\r\n    { title: 'Quiz', icon: ApartmentOutlined, url: '/quiz-video', children:[\r\n\r\n        { title: 'Quiz Video', icon: ApartmentOutlined, url: '/', component: QuizVideo },\r\n        { title: 'Quiz Question', icon: ApartmentOutlined, url: '/question', component:QuizQuestion  },\r\n    ] },\r\n    { title: 'Management', icon: ApartmentOutlined, url: '/user', children:[\r\n\r\n        { title: 'User', icon: ApartmentOutlined, url: '/', component: User },\r\n        { title: 'Worker', icon: ApartmentOutlined, url: '/worker', component: Worker },\r\n    ] },\r\n    { title: 'Application', icon: ApartmentOutlined, url: '/application', children:[\r\n        { title: 'Application', icon: ApartmentOutlined, url: '/', component: Application },\r\n        { title: 'CustomerCare', icon: ApartmentOutlined, url: '/customer-care', component: CustomerCare},\r\n        { title: 'FAQ', icon: ApartmentOutlined, url: '/faq', component: FAQ},\r\n    ] },\r\n\r\n].filter(v => (!v.hidden) || v.children?.length);\r\n\r\nexport default routes;","import { Menu } from 'antd';\r\nimport React from 'react';\r\nimport routes from './route';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst items = [...routes];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach((v, i) => {\r\n        if (v.children?.length) {\r\n            arr[i] = {\r\n                ...arr[i],\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            arr[i] = {\r\n                ...v,\r\n                key: prevBaseUrl + v.url,\r\n                icon: <v.icon />,\r\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\r\n            }\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle(items);\r\n\r\nitems.push(\r\n    {\r\n        label: 'Logout',\r\n        icon: <LogoutOutlined />,\r\n        key: 'logout',\r\n        style: { color: 'red' },\r\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\r\n        component: <></>\r\n    }\r\n);\r\n\r\nconst App = () => {\r\n    const paths = [];\r\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\r\n        paths.push(prev + '/' + cur);\r\n        return prev + '/' + cur;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <Menu\r\n                    defaultSelectedKeys={[paths.pop()]}\r\n                    defaultOpenKeys={[...paths]}\r\n                    mode=\"horizontal\"\r\n                    theme=\"dark\"\r\n                    items={items}\r\n                // style={{ height: '100vh' }}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Card, Layout } from \"antd\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\nimport routes from \"./route\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\n\r\n\r\nconst newRoutes = [];\r\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\r\n    arr.forEach(v => {\r\n        if (v.children) {\r\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\r\n        } else {\r\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\r\n        }\r\n    })\r\n}\r\nconvertMultiToSingle([...routes]);\r\n\r\n\r\nexport default function MyLayout() {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                {/* <Layout.Sider\r\n                    width={250}\r\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\r\n                    style={{\r\n                        overflow: 'auto',\r\n                        height: '100vh',\r\n                        position: 'fixed',\r\n                        left: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        maxWidth: '300px!important',\r\n                        width: '300px!important'\r\n                    }}\r\n                >\r\n                    <div className=\"logo\" />\r\n                    <Menu />\r\n                </Layout.Sider>routes */}\r\n                <Layout className=\"site-layout\">\r\n                    {/* <Top /> */}\r\n                    <Menu />\r\n\r\n\r\n                    <Layout.Content\r\n                        style={{\r\n                            margin: '24px 40px 0 40px',\r\n                            // overflow: 'initial',\r\n                            // marginLeft: !collapsed ? '230px' : '60px'\r\n                        }}\r\n                    >\r\n                        {/* <Breadcrumb /> */}\r\n                        <Card bordered>\r\n                            <Routes>\r\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["_jsx","_Fragment","children","_jsxs","Row","gutter","justify","Col","span","Typography","Title","level","style","marginLeft","span1","Card","hoverable","width","backgroundColor","borderRadius","marginTop","title","height","Form","Item","label","Progress","percent","status","service","_classCallCheck","_createClass","key","value","id","data","axios","get","this","baseURL","params","query","post","ids","url","config","UploadImage","_ref","_ref$value","_ref$uploadButton","uploadButton","Button","icon","UploadOutlined","type","_ref$count","count","_ref$cropImage","cropImage","classs","disabled","onChange","others","_objectWithoutProperties","_excluded","_useState","useState","_toConsumableArray","util","getFileFormat","_useState2","_slicedToArray","fileList","setFileList","customRequest","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","onSuccess","onError","file","onProgress","fmData","wrap","_context","prev","next","FormData","onUploadProgress","event","loaded","total","append","fileService","save","then","res","concat","uid","name","map","v","err","stop","_x","apply","arguments","handleOnChange","handleRemove","remove","_fileList$filter","filter","aspect","shape","quality","ImgCrop","rotate","Upload","_objectSpread","accept","onRemove","className","length","MyPagination","props","qData","setQData","Pagination","showTotal","start","page","limit","end","Tag","pageSize","current","pp","showSizeChanger","Search","addNewModalRef","selected","deleteData","list","onSubmitCapture","marginBottom","Input","placeholder","defaultValue","e","target","undefined","allowClear","htmlType","float","PlusOutlined","onClick","openForm","Popconfirm","onConfirm","okText","cancelText","danger","DeleteOutlined","AddForm","forwardRef","ref","_useState9","_useState10","open","setOpen","_useState11","_useState12","setData","_useState13","_useState14","ajxRequesting","setAjxRequesting","_useState15","_useState16","handleChange","Object","entries","forEach","ent","varDt","k","keys","split","i","parseInt","useImperativeHandle","dt","fileType","Services","saveService","AntdMsg","message","catch","finally","useEffect","Modal","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","footer","Spin","spinning","indicator","LoadingOutlined","fontSize","spin","layout","logo","listType","photo","required","perSqFeetRate","description","instructions","Select","Option","saveAddon","price","TinyMce","_props$height","_props$menubar","menubar","plugins","toolbar","content_style","initialValue","editorRef","useRef","Editor","onInit","evt","editor","init","file_browser_callback_types","file_picker_callback","cb","meta","input","document","createElement","setAttribute","onchange","files","reader","FileReader","readAsDataURL","onload","result","click","deprecation_warnings","onSelectionChange","getContent","Aboutus","TandC","PrivacyPolicy","_ref3","saveCustomer","detailCustomer","subTitle","email","phone","saveFAQ","detailFAQ","question","answer","saveApartment","saveFloor","detailFloor","saveMembership","detailMembership","amount","DatePicker","validity","dayjs","moment","format","disabledDate","isBefore","Date","subtract","benefits","termsAndConditions","Address","userId","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setSelected","_useState7","_useState8","columns","dataIndex","render","isActive","color","row","size","EditOutlined","item","hidden","listAddress","_res$data","extra","deleteAddress","tableColumns","ellipsis","fixed","tableProps","bordered","showHeader","rowSelection","selectedRowKeys","tableLayout","Table","pagination","dataSource","scroll","y","x","saveAddress","address","landmark","city","pincode","addressType","isEmailVerified","saveUser","avatar","landMark","pinCode","province","_id","password","AddressModal","_useState17","_useState18","_useState19","_useState20","Text","addNewModalRef1","saveWorker","age","gender","TextArea","reference_contact","insuranceNo","jobType","employmentType","Divider","orientation","bank_name","bank_branch_name","account_holder_name","accountNo","ifsc_code","passportNo","visa_type","emigration_type","passport_picture","driving_license_picture","visa_picture","AddForm1","wid","open1","setOpen1","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","console","log","openForm1","workerId","earnDetail","textAlign","totalEarning","Variant","variantDetails","earnings","parentKay","completeData","clear","saveEarn","React","_v$apartmentId","apartmentId","find","vv","saveVoucher","_util$removeSpecialCh","code","removeSpecialChars","toUpperCase","_util$removeSpecialCh2","addonBefore","discountValue","maxDiscountValue","minOrderPrice","expiryDate","user","userNames","setUserNames","Names","padding","margin","searchKey","xs","xl","showSearch","optionFilterProp","filterOption","option","_option$searchKey","toLowerCase","includes","RangePicker","_worker$filter","worker","search","setSearch","bookingId","CheckCircleOutlined","saveBanner","image_url","saveQuizVideo","video","QuizOption","questionId","listQuizOption","position","quizQuestionId","saveQuizOption","QuizAnswer","quiz","setQuiz","listQuizAnswer","saveQuizAnswer","quizOptionId","saveQuizQuestion","OptionModal","AnswerModal","SendOutlined","WarningOutlined","NotificationOutlined","routes","DashboardOutlined","component","Dashboard","ApartmentOutlined","Image","src","listService","deleteService","listAddon","deleteAddon","listMembership","deleteMembership","listSubscription","deleteFloor","listBanner","deleteBanner","listReview","deleteReview","discountType","listVoucher","reverse","deleteVoucher","setWid","setWorker","listBooking","WorkerServices","listWorker","HTMLRenderer","html","listFloor","listApartment","deleteApartment","controls","listQuizVideo","deleteQuizVideo","optionsModalRef","answerModalRef","listQuizQuestion","deleteQuizQuestion","addressModalRef","listUser","deleteUser","PoundOutlined","deleteWorker","currentTab","setCurrentTab","changeForm","getDetails","detail","Tabs","activeKey","items","borderTop","display","flexDirection","paddingTop","paddingRight","listCustomer","deleteCustomer","listFAQ","deleteFAQ","_v$children","convertMultiToSingle","arr","prevBaseUrl","Link","to","push","LogoutOutlined","window","localStorage","location","reload","_useLocation$pathname","paths","useLocation","pathname","reduce","cur","Menu","defaultSelectedKeys","pop","defaultOpenKeys","mode","theme","Error404","Result","newRoutes","MyLayout","Layout","minHeight","Content","Routes","Route","path","element"],"sourceRoot":""}